// Header js
window.addEventListener("DOMContentLoaded", function () {
  var navLinks = document.querySelectorAll(".bb-nav-item");
  var submenus = document.querySelectorAll(".bb-sub-nav");

  navLinks.forEach(function (navLink, index) {
    navLink.addEventListener("click", function (event) {
      if (navLink.getAttribute("href") === "#") {
        event.preventDefault();
      }

      navLinks.forEach(function (link, idx) {
        if (idx === index) {
          link.classList.toggle("active");
        } else {
          link.classList.remove("active");
        }
      });

      submenus.forEach(function (submenu, idx) {
        if (idx === index) {
          submenu.classList.toggle("bb-sub-nav-active");
        } else {
          submenu.classList.remove("bb-sub-nav-active");
        }
      });

      event.stopPropagation();
    });

    if (window.innerWidth > 1024) {
      navLink.addEventListener("mouseenter", function () {
        removeActiveClasses();
      });
    }
  });

  document.addEventListener("click", function (event) {
    navLinks.forEach(function (navLink, index) {
      if (
        !navLink.contains(event.target) &&
        submenus[index] &&
        !submenus[index].contains(event.target)
      ) {
        submenus[index].classList.remove("bb-sub-nav-active");
        navLink.classList.remove("active");
      }
    });
  });

  function removeActiveClasses() {
    navLinks.forEach(function (navLink) {
      navLink.classList.remove("active");
    });
    submenus.forEach(function (submenu) {
      submenu.classList.remove("bb-sub-nav-active");
    });
  }
});

// mobile menu
document.addEventListener("DOMContentLoaded", () => {
  const hamburger = document.querySelector(".bb-hamburger");
  const nav = document.querySelector(".bb-nav");
  if (hamburger) {
    hamburger.addEventListener("click", () => {
      hamburger.classList.toggle("is-active");
      nav.classList.toggle("active");
    });
  }
});

// Banner slider js
const slides = document.querySelectorAll(".bb-banner-slide");
const bullets = document.querySelectorAll(".bb-slider-bullet");

let currentSlide = 0;
let slideInterval;

function showSlide(index) {
  slides.forEach((slide, i) => {
    if (i === index) {
      slide.classList.add("active");
      bullets[i].classList.add("active");
    } else {
      slide.classList.remove("active");
      bullets[i].classList.remove("active");
    }
  });
}

bullets.forEach((bullet, index) => {
  bullet.addEventListener("click", () => {
    clearInterval(slideInterval);
    currentSlide = index;
    showSlide(currentSlide);
    slideInterval = setInterval(autoSlide, 5000);
  });
});

function autoSlide() {
  currentSlide = (currentSlide + 1) % slides.length;
  showSlide(currentSlide);
}

slideInterval = setInterval(autoSlide, 5000);

// accordion
document.addEventListener("DOMContentLoaded", function () {
  const accordionItems = document.querySelectorAll(".bb-accordion-item");

  accordionItems.forEach((item) => {
    item.addEventListener("click", function () {
      const content = this.querySelector(".bb-accordion-content");
      const chevron = this.querySelector(".bbi-accordion-chevron");

      document
        .querySelectorAll(".bb-accordion-content.open")
        .forEach((openContent) => {
          if (openContent !== content) {
            openContent.classList.remove("open");
            const openChevron = openContent.parentElement.querySelector(
              ".bbi-accordion-chevron"
            );
            openChevron.style.transform = "rotate(0)";
          }
        });

      content.classList.toggle("open");

      chevron.style.transform = content.classList.contains("open")
        ? "rotate(180deg)"
        : "rotate(0)";
    });
  });
});

// range slider
var sliderContainers = document.querySelectorAll(".bb-input-slider-container");

sliderContainers.forEach(function (container) {
  var rangeSlider = container.querySelector(".bb-input-range");
  var rangeBullet = container.querySelector(".bb-input-range-bullet");

  rangeSlider.addEventListener("input", function () {
    showSliderValue(rangeSlider, rangeBullet);
    updateRangeColor(rangeSlider);
  });

  showSliderValue(rangeSlider, rangeBullet);
  updateRangeColor(rangeSlider);
});

function showSliderValue(rangeSlider, rangeBullet) {
  rangeBullet.innerHTML = rangeSlider.value;
  var bulletPosition =
    (rangeSlider.value - rangeSlider.min) / (rangeSlider.max - rangeSlider.min);
  var containerWidth = rangeSlider.parentElement.clientWidth;
  var bulletWidth = rangeBullet.offsetWidth;
  var offset = 24;

  rangeBullet.style.left =
    bulletPosition * (containerWidth - bulletWidth) + offset + "px";
}

function updateRangeColor(rangeSlider) {
  var value = rangeSlider.value;
  var max = rangeSlider.max;
  var min = rangeSlider.min;

  var color = "rgb(var(--color-primary))";
  var borderRadius = "8px";

  rangeSlider.style.background =
    "linear-gradient(to right, " +
    color +
    " 0%, " +
    color +
    " " +
    value +
    "%, transparent " +
    value +
    "%, transparent 100%)";
  rangeSlider.style.borderRadius = borderRadius;
}

// Calculate and update the value of numberOfNewSignals
function calculateNumberOfNewSignals() {
  var numberOfTeamMembers = parseInt(
    document.getElementById("numberOfTeamMembers").value
  );
  var sizeOfNetwork = parseInt(document.getElementById("sizeOfNetwork").value);
  var numberOfSignals = parseFloat(
    document.getElementById("numberOfSignals").value
  );
  var legitimateSignalsRange = parseInt(
    document.getElementById("legitimateSignalsRange").value
  );
  var uniqueSignalsRange = parseInt(
    document.getElementById("uniqueSignalsRange").value
  );

  var numberOfNewSignals =
    numberOfTeamMembers *
    sizeOfNetwork *
    numberOfSignals *
    (legitimateSignalsRange / 100) *
    (uniqueSignalsRange / 100);

  document.getElementById("numberOfNewSignals").value =
    numberOfNewSignals.toFixed(2);
}

document
  .querySelectorAll(".bb-calc-form-input, .bb-input-range")
  .forEach(function (element) {
    element.addEventListener("input", calculateNumberOfNewSignals);
  });

calculateNumberOfNewSignals();
